---
- name: Se instalaa el mount nfs-utils
  yum:
    name: nfs-utils
    state: latest
  become: yes

- name: Se crea el directorio para el NFS
  file:
    path: /srv/nfs
    state: directory
    owner: ansible
    group: ansible
    mode: 0777
  become: yes

- name: Se monta el NFS
  mount:
    fstype: nfs
    opts: defaults
    dump: 0
    passno: 0
    state: mounted
    src: "10.0.0.12:/srv/nfs"
    path: "/srv/nfs"
  become: yes

- name: Se descargan las imágenes para configurar el cluster
  shell: kubeadm config images pull
  become: yes

- name: Se crea la red del cluster
  command: kubeadm init --pod-network-cidr=192.168.0.0/16
  become: yes

- name: Se crea el directorio .kube
  file:
    path: /root/.kube
    state: directory
  become: yes

- name: Se exporta la configuración del cluster para gestionarlo con kubectl
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    remote_src: yes
    owner: root
    group: root
  become: yes
 
- name: Se genera el token para conectar el worker con el master
  shell: kubeadm token create --print-join-command
  register: token_worker
  become: yes

- name: Se almacena el token en un archivo local
  local_action: copy content="{{ token_worker.stdout_lines[0] }}" dest="./token_worker"

- name: Se copia el configmap para la SDN 
  copy:
    src: custom-resources.yml
    dest: /root/custom-resources.yml
    mode: '0644'
  become: yes

- name: Se añade el repositorio del SDN de Calico
  shell: /usr/local/bin/helm repo add projectcalico https://projectcalico.docs.tigera.io/charts
  become: yes

- name: Se crea el namespace para lanzar el Helm
  shell: kubectl create namespace tigera-operator
  become: yes

- name: Se instala la SDN de Calico
  shell: /usr/local/bin/helm install calico projectcalico/tigera-operator --version v3.23.3 --namespace tigera-operator
  become: yes

- name: Se añade el repositorio del HAProxy para lanzarlo con Helm 
  shell: /usr/local/bin/helm  repo add haproxytech https://haproxytech.github.io/helm-charts
  become: yes

- name: Se crea un nuevo namespace del HA-Proxy
  shell: kubectl create namespace ha-proxy
  become: yes

- name: Se instala el HaProxy
  shell: /usr/local/bin/helm install ha-proxy haproxytech/haproxy -n ha-proxy
  become: yes

- name: Se reinicia la máquina
  reboot:
  become: yes

- name: Se hace una pausa de 4 minutos para que se levante de nuevo el cluster
  ansible.builtin.pause:
    minutes: 4
